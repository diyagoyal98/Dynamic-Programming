int longestCommonSubsequence(string text1, string text2) 
    {
        int n1=text1.length();
        int n2=text2.length();
        vector<vector<int>>dp(n1+1,vector<int>(n2+1,0));
        for(int i=0;i<n2;i++)
        dp[0][i]=0;
        for(int i=0;i<n1;i++)
        dp[i][0]=0;

        for(int idx1=1;idx1<=n1;idx1++)
        {
            for(int idx2=1;idx2<=n2;idx2++)
            {
               if(text1[idx1-1]==text2[idx2-1])
               dp[idx1][idx2]=1+dp[idx1-1][idx2-1];
               else
               dp[idx1][idx2]=max(dp[idx1-1][idx2],dp[idx1][idx2-1]);
            }
        }
        return dp[n1][n2];
    } 
 

int canYouMake(string &str, string &ptr)
{
    int ans=longestCommonSubsequence(str,ptr);
    return str.length()+ptr.length()-2*ans;
}
