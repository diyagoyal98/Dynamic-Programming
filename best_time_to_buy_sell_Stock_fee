class Solution {
public:
    int fun(vector<int>&prices,int idx,int fee,int buy,vector<vector<int>>&dp)
    {
        if(idx==prices.size())
        return 0;
        if(dp[idx][buy]!=-1)
        return dp[idx][buy];
        if(buy)
        {
            return dp[idx][buy]=max(-prices[idx]+fun(prices,idx+1,fee,0,dp) ,
                                     0+fun(prices,idx+1,fee,1,dp));
        }
        else
        {
            return dp[idx][buy]=max(prices[idx]-fee+fun(prices,idx+1,fee,1,dp) , 
            0+fun(prices,idx+1,fee,0,dp));
        }
    }
    int maxProfit(vector<int>& prices, int fee) 
    {
        int n=prices.size();
        vector<vector<int>>dp(n,vector<int>(2,-1));
        return fun(prices,0,fee,1,dp);    
    }
};
